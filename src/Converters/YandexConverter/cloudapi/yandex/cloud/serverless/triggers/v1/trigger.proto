syntax = "proto3";

package yandex.cloud.serverless.triggers.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/serverless/triggers/v1;triggers";
option java_package = "yandex.cloud.api.serverless.triggers.v1";

enum TriggerType {
  TRIGGER_TYPE_UNSPECIFIED = 0;
  TIMER = 2;
  MESSAGE_QUEUE = 3;
  IOT_MESSAGE = 4;
  OBJECT_STORAGE = 5;
}

message Trigger {

  // ID of the trigger.
  string id = 1;

  // ID of the folder that the trigger belongs to.
  string folder_id = 2 [(required) = true, (length) = "<=50"];

  // Timestamp when the trigger was created.
  google.protobuf.Timestamp created_at = 3;

  // Name of the trigger.
  string name = 4 [(required) = true];

  // Description of the trigger.
  string description = 5;

  // Resource labels as `key:value` pairs.
  map<string, string> labels = 6;

  // Defines trigger rule (is always consistent with type filed)
  Rule rule = 8 [(required) = true];

  message Rule {
    oneof rule {
      option (exactly_one) = true;
      Timer timer = 2;
      MessageQueue message_queue = 3;
      IoTMessage iot_message = 4;
      ObjectStorage object_storage = 5;
    }
  }

  message Timer {

    // Format: Minutes Hours Day-of-Month Month Day-of-week (Year)
    // * ("all values") - to select all values within a field.
    // ? ("no specific value") - placeholder for "any": you can't specify the Day-of-Month and Day-of-Week fields in the same cron expression, so if you specify a value in one of the fields, you must use a "?" in the other.
    // see http://man7.org/linux/man-pages/man5/crontab.5.html
    string cron_expression = 1 [(required) = true, (length) = "<=100"];

    oneof action {
      option (exactly_one) = true;
      InvokeFunctionOnce invoke_function = 101;
    }
  }

  message MessageQueue {

    // ID of the queue.
    string queue_id = 11;

    // SA which has read access to the queue.
    string service_account_id = 3 [(required) = true, (length) = "<=50"];

    // Batch settings for YMQ client.
    BatchSettings batch_settings = 4 [(required) = true];

    // Queue visibility timeout override.
    google.protobuf.Duration visibility_timeout = 5 [(value) = "<=12h"];

    oneof action {
      option (exactly_one) = true;
      InvokeFunctionOnce invoke_function = 101;
    }
  }

  message IoTMessage {
    string registry_id = 1 [(required) = true];
    string device_id = 2;
    string mqtt_topic = 3;

    oneof action {
      option (exactly_one) = true;
      InvokeFunctionWithRetry invoke_function = 101;
    }
  }

  enum ObjectStorageEventType {
    OBJECT_STORAGE_EVENT_TYPE_UNSPECIFIED = 0;
    OBJECT_STORAGE_EVENT_TYPE_CREATE_OBJECT = 1;
    OBJECT_STORAGE_EVENT_TYPE_UPDATE_OBJECT = 2;
    OBJECT_STORAGE_EVENT_TYPE_DELETE_OBJECT = 3;
  }

  message ObjectStorage {
    // Type (name) of events, at least one value is required.
    repeated ObjectStorageEventType event_type = 3 [(size) = ">0"];

    string bucket_id = 4;

    // Filter, optional.
    string prefix = 6;
    string suffix = 7;

    oneof action {
      option (exactly_one) = true;
      InvokeFunctionWithRetry invoke_function = 101;
    }
  }
}

message InvokeFunctionOnce {
  string function_id = 1 [(required) = true, (length) = "<=50"];
  string function_tag = 2;

  // SA which should be used to call a function, optional.
  string service_account_id = 3;
}

message InvokeFunctionWithRetry {
  string function_id = 1 [(required) = true, (length) = "<=50"];
  string function_tag = 2;

  // SA which has call permission on the function, optional.
  string service_account_id = 3;

  // Retry policy, optional (no value means no retry).
  RetrySettings retry_settings = 4;
}

message BatchSettings {

  // Maximum batch size: trigger will send a batch if number of events exceeds this value.
  int64 size = 1 [(value) = "0-10"];

  // Maximum batch size: trigger will send a batch if its lifetime exceeds this value.
  google.protobuf.Duration cutoff = 2 [(required) = true];
}

message RetrySettings {

  // Maximum number of retries (extra calls) before an action fails.
  int64 retry_attempts = 1 [(value) = "1-5"];

  // Interval between tries.
  google.protobuf.Duration interval = 2 [(required) = true];
}
