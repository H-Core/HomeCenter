syntax = "proto3";

package yandex.cloud.mdb.clickhouse.v1;

import "google/protobuf/wrappers.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/clickhouse/v1;clickhouse";
option java_package = "yandex.cloud.api.mdb.clickhouse.v1";

// A ClickHouse User resource. For more information, see 
// the [Developer's guide](/docs/managed-clickhouse/concepts).
message User {
  // Name of the ClickHouse user.
  string name = 1;

  // ID of the ClickHouse cluster the user belongs to.
  string cluster_id = 2;

  // Set of permissions granted to the user.
  repeated Permission permissions = 3;

  UserSettings settings = 4;
}

message Permission {
  message DataFilter {
    string table_name = 1;

    string filter = 2;
  }

  // Name of the database that the permission grants access to.
  string database_name = 1;

  repeated DataFilter data_filters = 2;
}

message UserSpec {
  // Name of the ClickHouse user.
  string name = 1 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

  // Password of the ClickHouse user.
  string password = 2 [(required) = true, (length) = "8-128"];

  // Set of permissions to grant to the user.
  repeated Permission permissions = 3;

  UserSettings settings = 4;
}

// ClickHouse user settings. Supported settings are a limited subset of all settings
// described in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/).
message UserSettings {
  enum OverflowMode {
    OVERFLOW_MODE_UNSPECIFIED = 0;

    OVERFLOW_MODE_THROW = 1;

    OVERFLOW_MODE_BREAK = 2;
  }

  enum GroupByOverflowMode {
    GROUP_BY_OVERFLOW_MODE_UNSPECIFIED = 0;

    GROUP_BY_OVERFLOW_MODE_THROW = 1;

    GROUP_BY_OVERFLOW_MODE_BREAK = 2;

    GROUP_BY_OVERFLOW_MODE_ANY = 3;
  }

  enum DistributedProductMode {
    DISTRIBUTED_PRODUCT_MODE_UNSPECIFIED = 0;

    DISTRIBUTED_PRODUCT_MODE_DENY = 1;

    DISTRIBUTED_PRODUCT_MODE_LOCAL = 2;

    DISTRIBUTED_PRODUCT_MODE_GLOBAL = 3;

    DISTRIBUTED_PRODUCT_MODE_ALLOW = 4;
  }

  // Restricts permissions for non-DDL queries.
  // Possible values:
  // * 0 (default) —  no restrictions.
  // * 1 — only read data queries are allowed.
  // * 2 — read data and change settings queries are allowed.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
  google.protobuf.Int64Value readonly = 1 [(value) = "0-2"];

  // Whether DDL queries are allowed. Default value: `false`.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
  google.protobuf.BoolValue allow_ddl = 2;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
  google.protobuf.Int64Value insert_quorum = 3 [(value) = ">=0"];

  // Connection timeout in milliseconds.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
  google.protobuf.Int64Value connect_timeout = 39 [(value) = ">0"];

  // Receive timeout in milliseconds.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
  google.protobuf.Int64Value receive_timeout = 40 [(value) = ">0"];

  // Send timeout in milliseconds.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
  google.protobuf.Int64Value send_timeout = 41 [(value) = ">0"];

  // Quorum write timeout in milliseconds. Default value: 60000.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
  google.protobuf.Int64Value insert_quorum_timeout = 4 [(value) = ">=1000"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
  google.protobuf.BoolValue select_sequential_consistency = 5;

  // Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
  google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(value) = ">=1000"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
  google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
  google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(value) = "0-2"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
  DistributedProductMode distributed_product_mode = 43;

  // Whether the memory-saving mode of distributed aggregation is enabled.
  google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;

  // Timeout for DDL queries, in milliseconds.
  google.protobuf.Int64Value distributed_ddl_task_timeout = 73;

  // Whether query compilation is enabled.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
  google.protobuf.BoolValue compile = 44;

  // The number of structurally identical queries before they are compiled.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
  google.protobuf.Int64Value min_count_to_compile = 45 [(value) = ">=0"];

  // Whether expression compilation is enabled.
  google.protobuf.BoolValue compile_expressions = 46;

  // The number of identical expressions before they are compiled.
  google.protobuf.Int64Value min_count_to_compile_expression = 47 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
  google.protobuf.Int64Value max_block_size = 9 [(value) = ">0"];

  // Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
  // blocks will never be squashed.
  google.protobuf.Int64Value min_insert_block_size_rows = 48 [(value) = ">=0"];

  // Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
  // blocks will never be squashed.
  google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
  google.protobuf.Int64Value max_insert_block_size = 10 [(value) = ">0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
  google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
  google.protobuf.BoolValue use_uncompressed_cache = 51;

  // The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
  // than the specified value.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
  google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(value) = ">0"];

  // The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
  // than the specified value.
  google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(value) = ">0"];

  // The minimum number of rows to be read from a file to enable concurrent read.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
  google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(value) = ">0"];

  // The minimum number of bytes to be read from a file to enable concurrent read.
  google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(value) = ">0"];

  google.protobuf.Int64Value max_bytes_before_external_group_by = 74;

  google.protobuf.Int64Value max_bytes_before_external_sort = 75;

  google.protobuf.Int64Value group_by_two_level_threshold = 76;

  google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;

  // Priority of the query.
  google.protobuf.Int64Value priority = 56 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
  google.protobuf.Int64Value max_threads = 8 [(value) = ">0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
  google.protobuf.Int64Value max_memory_usage = 11 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
  google.protobuf.Int64Value max_memory_usage_for_user = 12 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
  google.protobuf.Int64Value max_network_bandwidth = 57;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
  google.protobuf.Int64Value max_network_bandwidth_for_user = 58;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
  google.protobuf.BoolValue force_index_by_date = 59;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
  google.protobuf.BoolValue force_primary_key = 60;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
  google.protobuf.Int64Value max_rows_to_read = 13 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
  google.protobuf.Int64Value max_bytes_to_read = 14 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
  OverflowMode read_overflow_mode = 15;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
  google.protobuf.Int64Value max_rows_to_group_by = 16 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
  GroupByOverflowMode group_by_overflow_mode = 17;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
  google.protobuf.Int64Value max_rows_to_sort = 18 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
  google.protobuf.Int64Value max_bytes_to_sort = 19 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
  OverflowMode sort_overflow_mode = 20;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
  google.protobuf.Int64Value max_result_rows = 21 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
  google.protobuf.Int64Value max_result_bytes = 22 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
  OverflowMode result_overflow_mode = 23;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
  google.protobuf.Int64Value max_rows_in_distinct = 24 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
  google.protobuf.Int64Value max_bytes_in_distinct = 25 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
  OverflowMode distinct_overflow_mode = 26;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
  google.protobuf.Int64Value max_rows_to_transfer = 27 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
  google.protobuf.Int64Value max_bytes_to_transfer = 28 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
  OverflowMode transfer_overflow_mode = 29;

  // Maximum query execution time in milliseconds.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
  google.protobuf.Int64Value max_execution_time = 30 [(value) = ">=0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
  OverflowMode timeout_overflow_mode = 31;

  // Maximum number of columns that can be read from a table in a single query.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
  google.protobuf.Int64Value max_columns_to_read = 32 [(value) = ">=0"];

  // Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
  google.protobuf.Int64Value max_temporary_columns = 33 [(value) = ">=0"];

  // Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
  google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(value) = ">=0"];

  // The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
  google.protobuf.Int64Value max_query_size = 35 [(value) = ">0"];

  // Maximum depth of query syntax tree. Default value: 1000.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
  google.protobuf.Int64Value max_ast_depth = 36 [(value) = ">0"];

  // Maximum size of query syntax tree in number of nodes. Default value: 50000.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
  google.protobuf.Int64Value max_ast_elements = 37 [(value) = ">0"];

  // Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
  google.protobuf.Int64Value max_expanded_ast_elements = 38 [(value) = ">0"];

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
  google.protobuf.BoolValue input_format_values_interpret_expressions = 61;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
  google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;

  // Whether quoting of 64-bit integers is enabled in JSON output format.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
  google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;

  // Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
  google.protobuf.BoolValue output_format_json_quote_denormals = 64;

  google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;

  google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;

  // HTTP connection timeout, in milliseconds.
  google.protobuf.Int64Value http_connection_timeout = 65;

  // HTTP receive timeout, in milliseconds.
  google.protobuf.Int64Value http_receive_timeout = 66;

  // HTTP send timeout, in milliseconds.
  google.protobuf.Int64Value http_send_timeout = 67;

  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
  google.protobuf.BoolValue enable_http_compression = 68;

  // Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
  // See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
  google.protobuf.BoolValue send_progress_in_http_headers = 69;

  // Minimum interval between progress notifications, in milliseconds. Default value: 100.
  google.protobuf.Int64Value http_headers_progress_interval = 70;

  // Whether CORS header in HTTP responses is enabled. Default value: `false`.
  google.protobuf.BoolValue add_http_cors_header = 71;
}
