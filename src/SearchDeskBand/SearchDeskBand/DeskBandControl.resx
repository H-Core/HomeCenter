<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABe
        EAAAAk1TRnQBSQFMAgEBBAEAARABAAEQAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABKAMAAQEBAAEgBgABMv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8AewADAQECAwEBAgMBAQIDAAEBAwABAQMABAEBAgMBAQIDAQECAwEBAgMBAQIDAAEBDwABAQ8A
        BAEBAgMBAQIDAQECAwABAQMAAQEDAAQBAQIDAQECAwEBAgMBAQIDAQECAwABAQ8AAQEPAAQBAQIDAQEC
        AwEBAgMAAQEDAAEBAwAEAQECAwABAQMAAQEHAAEBRAADFgEfAzcBXANDAZkDQwGZA0MBmQM2AVwYAAMB
        AQIDAQECAwABAQsAAQEDAAEBAwABAQMABAEBAgMAAQEkAAMBAQIDAQECAwABAQsAAQEDAAEBAwABAQMA
        BAEBAgMAAQEkAAMBAQIDAQECAwABAQsAAQEDRAF6A0oBjQMyAVADAAEBAwABAQM/AWwDSgGRAzcBWzQA
        AxYBHwM8AWcDRwG4AzwBzANEAaMDLwHWA0MBmRsAAQEDAAEBDwABAQMAAQEDAAEBAwABAQMAAQEDAAEB
        JwABAQMAAQEPAAEBAwABAQMAAQEDAAEBAwABAQMAAQEnAAEBAwIBAwMCAQMDBgEIAxgBIQM9AWcDSQHe
        A0sB6wNQAbADPAFmAz0BZwNOAdIDQQH2A1ABvgMxAU4DBAEGAwEBAgMDAQQDAgEDIAADNwFcA0cBuAM7
        AcwDPAFmAxABFQNEAZgDQwGZJAADDAEQAx0BKgMhATADIgExAyIBMQMiATEDIgExAyIBMQMiATEDIgEx
        AyIBMQMgAS8DHAEnAwYBCDMAAQEsAAMEAQYDBQEHAxgBIgM/AW4DPwH9A0sB2ANQAcMDTwHBA04BzANO
        Ac4DTAHNA04BzgNMAdoDUQHKAykBPwMNAREDBwEJAwUBByAAA0QBmAM8AcwDPQFnCAADRAGYA0MBmSQA
        AzIBUANZAdADUQHtA00B7wNOAe8DTgHwA0oB8gNKAfIDSgHyA0oB8gNLAfIDUQHpA1cBwgMcAScrAAQB
        BAIBAwMAAQEoAAMDBAQBBgM3AVsDTgHhA0IB9QMxAU0DDwEUAwkBDAMKAQ4DDAEQAwoBDgMQARYDPQFo
        A04B4wI7AToB/wMtAUUDCAELAwEBAgwAAykBPgNGAY8DNgHMAzYBzAM2AcwDHAHqA0QBowMQARUIAANE
        AZgDQAHCAzMBUiAAAzQBUwNaAdUDVgHoA1YB4wNZAeADVwHfA1cB4QNVAeQDUgHqA1EB7ANQAe0DUgHi
        A1IBqQMYASIYAAMDAQQDBgEIAwEBAgMBBAIEAwQEBAUBBwMEAQUDBAEGAwQBBgMEAQUDCgENAwEBAhAA
        AwoBDQJDAUQBeQJRAVIBzANSAcUDOAFdAzABSwNKAY4DUQHEA04BzgNOAcwDUQGvAzcBWgMiATIDOwFk
        A0wB5QNPAdQDOQFfAwgBCwgAAygBPQNHAZkDQQHCA0cBpAM6AWYDOgFmAzoBZgMoAT0MAANEAZgDKgHr
        A08BswMxAU0DDAEQGAADGAEhAzUBVQM4AVwDNgFZAzYBWAM2AVcDNgFYAzYBWQM4AVwDOQFdAzkBXgM2
        AVkDKgFBAwoBDRQAAzcBWwNLAZoDRAF9AwABAQMABAEBAgMBAQIDAQQCAQMDAQQCAQMDAgEDAxcBIANL
        AZ0DSwGZAygBPQwAA0MBeQJNAU4B0QNQAb4DNgFZAxQBGwNMAZYDSwGTA0EBdAM8AWgDPAFmAzgBXgFI
        AkcBhQNAAXEDJAE2Az8BbgNIAeIDUAG1AzIBTwgAAzwBZgM8AcwDQwG3AykBPhwAA0QBmAMpAeoDTgHH
        A1ABswMaASRkAANLAZgDPgH9A0gB3gM8AWYDEAEVGAADHQEpA0cBhAM5AfwDPgH9AzwBZgwAAU8CUQHE
        Az4B+ANNAaEDHQEpAzYBWANLAZUDNQFVAw8BFAMDAQQDAgEDAwYBCAM7AWQDSgGRAz4BbAMfAS0DTQHV
        AUgBRgFIAewDSAGGCAADPAFmAzwBzANDAZkgAANEAZgDPAHMA0sBmQM2Af8DIwE0GAADCgENAxoBJQMi
        ATEDIgEyAyMBMwMiATIDIgEyAyIBMgMiATEDIgEyAyIBMgMhATADGwEmAwYBCBQAA0MBeQNMAd4DQAH9
        Az0B/gM4AV0DEQEXAwEBAggAAwEBAgMXASADRwGEAz8B/QM8AfwDSwHTAzIBUAwAAU0CTgGjA0wB3ANM
        AZcDLQFFA1AB1wMuAUcDCwEPAxEBFwMkATYDIwE0AwgBCwMQARYDQQF1A08BzAMnATsDTQHVAkgBSQHe
        A0MBeQgAAzwBZgM8AcwDQwGZIAADRAGYAzwBzANLAZkDNgH/AyMBNBgAAysBQgNSAbQDSgHyA0gB9gNE
        AfkDRAH4A0gB9gNIAfYDTAHzA0sB9ANFAfgDSwHtA1YBuwMbASYYAAM6AWIDSAH3A0AB/QM9Af4DPwFv
        AwcBCQgAAwcBCQNNAZwDQAH9A0AB+wNCAfUDIgEyEAADAwEEA0IBdANEAXkDKQE/AToCOwH7AyYBOAMI
        AQsDPwFuAjsBPAH+AzkB+wMjATQDCAELAz8BbQNNAdIDJgE5A04BzgM7AWUDAQECCAADPAFmAzwBzAND
        AZkgAANEAZgDPAHMA0sBmQM2Af8DIwE0GAADLQFFA1UBugNKAfIDTgHwA04B7wNRAe4DUwHsA0sB8gNN
        AfADTAHyA0gB9gNKAewDVwG9AxsBJhgAAw8BFAM3AVoDSAH3Az0B/ANKAd8DRQF9AwYBCAMEAQYDTQGh
        A0YB6QNAAfsDUgHQAyIBMgMHAQoQAAMLAQ8DSQGKA0kBigMoAT0CRQFGAfEDJgE5AwUBBwM8AWcCOQE6
        AfwDOwH+AyUBNwMHAQkDPgFsA00B1AMeASsDUQG+AzsBZAMGAQgIAAM8AWYDPAHMA0MBmSAAA0QBmAM8
        AcwDSwGZAzYB/wMjATQYAAMUARwDMAFLAzoBYAM5AV8DOQFeAzkBXgM5AV0DOgFgAzkBXwM6AWADOgFi
        AzgBXgMwAUsDCwEPHAADDwEUAzoBYgNMAd4DPwH9A04B1gNMAZwDTAGbA0gB6AM9Af0DUAG/AzEBThgA
        A0YBgQJNAU4B0QNMAZYDKAE8AkABQgH3Ay0BRgMIAQsDHgErAz4BawM/AW0DEgEYAw4BEwNAAXEDUAHG
        AxcBIANRAbEDUAGwAzcBWwgAAzwBZgM8AcwDQwGuAx0BKRwAA0QBmAMyAeEDUAG4A04BzAMdASp0AAND
        AXkDTQHTAz0B/ANAAf0DOgH8AzsB/ANOAb8DNwFbHAABUAJRAbUBQwFBAUMB8wNNAaADIgExA00BowNE
        AXoDJAE2AwkBDAMHAQoDBgEIAwIBAwMtAUUDSAGHA0kBigMTARoDUQG6A0sB6ANKAY0IAAMzAVEDRgGy
        A0ABxwNGAYYDIwE0AyMBNAMjATQDHQEpAxABFQgAA0QBmAMdAfUDTgHMAzwBZgMQARUYAAMLAQ8DHAEn
        AyIBMgMiATEDIgExAyIBMQMiATEDIQEwAyABLwMgAS4DHwEtAx0BKgMXASADBQEHHwABAQgAA0MBeANM
        Ad0DQAH7A0AB+wNNAdUDMwFSIAADRAF5A08B0wNPAbMDKQE/AxQBGwNLAZkDQgF0AyoBQQMnATsDJAE1
        AyABLwNGAYEDSAGIAyoBPwMuAUcDSwHXA00B2QNCAXUMAAMxAU0DSAGzAwAB/wMAAf8DAAH/AwAB/wM8
        AcwDPQFnCAADRAGYAzwBzAM9AWcgAAMuAUgDVAHCA0IB9QNMAfMDTAHzA00B8gNNAe8DUgHqA1YB6ANY
        AeMDVwHfA1gBzwNPAZwDFwEgGAADAQECAwMBBAMBAQIDAAEBAwYBCAM9AWkDQgH1A0IB9QMtAUYDCQEM
        AwEBAgMAAQEDAAEBFAADBwEKA0oBjgNMAeQDUgG3AwsBDwMNAREDRQF/A04B3gM6Af8DOgH/A1AB2QM9
        AWkDFgEeAyoBQANDAfMDRwHuA0cBhQMbASYMAAMLAQ8DGgEkAyMBMwMjATMDIwEzAz8BcANHAbgDOQHN
        Az0BZwMQARUDRAGYA0QBowMQARUgAAMxAU0DWAHLA0oB8gNPAfEDTwHxA1EB7gNSAeoDTwHuA1YB5ANX
        AeUDWAHmA1YB3ANWAbMDGgElGAADAQECAwMBBAMBAQIDAAEBAwIBAwMSARgDJQE3AyQBNgMNARIDBAEF
        AwABAQMAAQEDAgEDAwABARAAAwMBBAMaASQDRwGDA0gB6gFMAk8BzwMjATQDFgEfAyIBMQMoATwDKgFB
        AyIBMQMhATADPwFtA08BywNKAeoDOwFkAxoBJQMHAQogAAMWAR8DPAFmA0cBuAM8AcwDPAFnA0MBtwND
        AZkkAAMWAR8DMwFSAzoBYAM6AWADOgFgAzkBXgM5AV0DOQFfAzcBWgM4AVsDOAFcAzYBWQMvAUoDCwEP
        GwAEAQECAwABAQcABAEEAgEDAwIBAwMBAQIDAAEBCwABARQAAwMEBAEGAyMBNANLAZQBOwI8AfwDUAGx
        A0wBnANMAZwDTAGcA0sBmQNMAZgDTgGmA0wBzQNLAeEDRgGAAxoBJQMHAQkDAgEDJAADFgEeAzwBZgM8
        AcwDRwG4AywB4QNDAZm8AAMEAQYDBAEFAwgBCwMiATEDSwGYA0sB4gFAAkIB9wNNAdYDTQGeA0oBkQNO
        Ad4DQgH0A0sB2ANKAZADGwEmAwgBCwMDAQQDAQECKAADEAEVAzwBZgNCAbYDNgHLA0ABerwAAwQBBgME
        AQYDAQECAwABAQMEAQYDTAGVA1ABvANEAXkDCgEOAwEBAgNMAZMDUQG4A0UBfQMVAR0DBAEFAwABAQMA
        AQEDAAEBhwABAQMAAQFLAAEBAwABAWgAAUIBTQE+BwABPgMAASgDAAFQAwABKAMAAQEBAAEBBQAB4AEB
        FgAD//EAAv8B8AEAAe4BAAEOAeABBQH/AgAB/wEDAfEBgQH/ARgBHwHxAYABPwIAAf4BAwHzAYEB/wE4
        AR8B8AEAAQECAAH+AQMB/gEAAQcB/wG/AfgBAAEBAgAB/gEzAf4BAAEHAf4BHwH4AQABAQIAAcABMQH+
        AQABBwHgAQABeAEAAQECAAGAAXABfgEAAQcBwAEAATgBAAEBAgABhwHwAX8C/wHBAfgBOAEAAQECAAGP
        AfABfgEAAQcBwAFgATgBAAEBAgABjwHwAX4BAAEHAeABYAF4AQABAQIAAY8B8AF+AQABBwHgAQABeAEA
        AQECAAGPAfABfgEAAQcB8AEBAfgBAAEBAgABhwHwAX8C/wH8AQMB+AEAAQECAAGAATABfgEAAQcB9gEH
        AfgBAAEBAgABwAExAf4BAAEHAeABAAH4AQABAQIAAcABAQH+AQABBwHgAQABeAEAAQECAAH+AQMB/gEA
        AQcB4gEGAfgBAAEBAgAB/wEDBf8B+AEAAQECAAH/AYMF/wH4AQABAQIABP8BPwH/AfMD/wIACw==
</value>
  </data>
</root>