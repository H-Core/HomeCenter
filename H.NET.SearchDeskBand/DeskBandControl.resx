<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        CAAAAk1TRnQBSQFMAgEBBAEAASgBAAEoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AYgADAgEDAwIBAwMA
        AQEDAAEBAwAEAQECAwEEAgEDAwEBAgMAAQELAAEBCwABAQMCAQMDAgEDAwABAQMAAQEDAAQBAQIDAQQC
        AQMDAQECAwABAQsAAQELAAEBAwIBAwMCAQMDAAEBAwABAQMABAEBAgMAAQEHAAEBOAADRgGAAwAB/wMA
        Af8DAAH/FwABAQMAAQELAAEBAwABAQMAAQEDAAEBAwABAR8AAQEDAAEBCwABAQMAAQEDAAEBAwABAQMA
        AQEfAAEBAwABAQsAAQEDPgH9A0YB3AMAAQEDAAEBA0QB4gM9AfssAANGAYADAAH/A0YBgAcAAf+YAAMH
        AQkDBAEGAyABJgM9Af8CPAE9AfsDQgHnAz0B/AM9Af4DPAH+AzwB/ANBAfADCwEOAwEBAgMLAQ4fAAH/
        A0YBgAsAAf8gAANYAckDTgHtA0oB8ANMAe4DSQHyA0kB8gNJAfIDSQHyA0sB8wNWAcInAAEBAwIBAwMA
        AQEgAAMEAQUDBAEGA0YB3AE/AkAB9QMcASIDCQELAwoEDQEQAwsBDgMWARsBRgFFAUYB3AI9ATwB/wMS
        ARYDAgEDDAADRgGAAwAB/wMAAf8DAAH/AwAB/w8AAf8DRgGAHAADWAHSA1MB5wNUAd4DWAHaA1YB3ANX
        AeADUAHqA1AB6gNLAe8DUAGjGAADCQEMAwEBAgMBAQIDBAEFAwQEBgEIAwQBBgMHAQkDAwEEAwwBEBAA
        Aw8BEwJCAUMB7QNGAeADLwE3A0YBUANDAeoDPQH/Az4B+wNJAc4DIwEpAxkBHgJFAUQB3gM8Af8DEgEW
        CAADRgGAAwAB/wNGAYAbAAH/AzgB/wNGAYBUAAM9Af4DOgH7IAADOgH7A0AB/QwAA0AB8AM8Af8DFQEZ
        AwYBCAE+Aj8B+AMsATQDBAEFAwMBBAMNARABQgJBAfEDJwEuAx4BJAE7AjwB/wNIAcsIAANGAYADAAH/
        HwAB/wNGAYADOAH/VAADPQH+Az0B/gM9Af4YAAM9Af4DPQH+AzoB+wwAATwCPQH/AUEBQAFBAfEDHgEk
        A0kBzgMjASkEAAMCAQMDAAEBBAADIwEpAkMBQgHtAzMBOwI8AT0B/wE+Aj0B+wgAA0YBgAMAAf8fAAH/
        A0YBgAM4Af8YAANPAaUDSQHyA0YB9wNCAfoDRwH2A0cB9gNJAfIDRwH2A0IB+gNWAbsYAANFAfYDQAH9
        Az0B/gMLAQ8IAAMIAQsDQAH9A0AB/QNCAfUQAAMEAQUDSQG/Aw0BEAE9Aj4B+wMEAQYDCwEOAjsBPAH/
        AzwB+wMAAQEDDgERAT8CPgH4AzEBOQI+AT8B9AMDAQQIAANGAYADAAH/HwAB/wNGAYADOAH/GAADVAGv
        A0kB8gNOAe0DTgHtA1IB6ANJAfEDSwHvA0sB8wM+AfgDVwG9GAADAQECA0UB9gM9Af4DQQH5AwgBCwMG
        AQgDPgH4Az0B/gNFAfYDAAEBEAADEgEWAUUCRgHgAw4BEQJBAUIB7wMJAQsDAQECAjwBPQH7AzsB/wME
        AQUDCQELAzwB/wMiASgBRAFDAUQB3wMOAREIAANGAYADAAH/HwAB/wNGAYADOAH/YAADPQH+Az0B/gNA
        Af0DOgH8Az0B/gM6AfwYAAE8Aj0B/wE9ATwBPQH8AwoBDAE9Aj4B/AMcASIEAAMJAQsDCgEMBAADIwEp
        A0QB5AMVARoCSAFJAdABQQFAAT8B8AgAA0YBgAMAAf8DRgGAGwAB/wM4Af8DRgGAZAADPgH4A0AB/QNA
        Af0DPgH4HAADSQG7ATwBOwE8Af8DGwEgAxkBHgNEAeQDHQEjAwkBCwMBAQIDAwEEA0YB4AM/AUgDFgEb
        ATsCPAH/A0QB5AwAA0YBgAMAAf8DAAH/AwAB/wMAAf8DRgGACwAB/wNGAYAcAANUAbUDQgH1A0sB8wNL
        AfMDSgHwA1AB6gNTAecDVQHhA1YB3ANPAZwYAAMEAQUDAQECAwABAQMKAQ0DQgH1A0IB9QMTARoDAQEC
        AwABAQMAAQEQAAMJAQwBQwJEAeYDRgHhAwwEDwESAUkCSgHIAzwB/wM8Af8DSAHPAx4BJAMQARQDPwHz
        AUICQQHtAzYBPxwAA0YBgAMAAf8DRgGABwAB/yAAA1gBxANJAfEDSQHxA0kB8QNTAecDSwHvA1cB4ANS
        AegDUAHpA1UBuRgAAwMBBAMBAQIDAAQBAQIDBgEIAwUBBwMEAQUDAAEBAwABAQMCAQMQAAMBAQIDDQEQ
        A0EB9QE7AjwB/wMKAQwDAwEEAwcBCQMPARIDAwEEAy8BNwFAAT8BQAHwA0MB6AMUARgDBAEFIAADRgGA
        AwAB/wNGAYADAAH/mAADBgEIBAADIQEoAT0CPgH6Aj0BPAH+AzwB/wI8AT0B/gNAAfIDPwH5AzwB/wE8
        AjsB/wMzATsDBgEIAwQBBSQAA0YBgAMAAf8DAAH/mAADBwEJAwQBBQQAAwUBBwFDAkQB6QNCAe4DEgEW
        AwEBAgNDAecBRAJDAecDJgEtAwQBBgcAAQFvAAEBPwABAVQAAUIBTQE+BwABPgMAASgDAAFAAwABIAMA
        AQEBAAEBBgABARYAA/+BAAL/AQABNgEAATYBAQF/Af4BHwEwAX8BMAF/ATABHwH8AV8E/wGAAQEB/AHf
        AeABBwH8AX8BgAEBAcEBzwHgAQcB4AEHAYABAQGPAccC/wHPAfMBgAEBAZ8BxwL/AccB4wGCAUEBnwHH
        AeABBwHhAYcBgAEBAZ8BxwHgAQcB4AEHAYABAQGfAccC/wH4AR8BggFBAY8BxwL/AfwBPwGAAQEBwAHP
        AeABBwHgAQcBgAEBAfwBXwHgAQcB4AEHAYABAQH+AR8E/wGgAQEB/wEfBP8BkAEFA/8B3wH/Ad8C/ws=
</value>
  </data>
</root>