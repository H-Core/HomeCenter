<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB0
        EAAAAk1TRnQBSQFMAgEBBAEAAQgBAAEIAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABKAMAAQEBAAEgBgABMv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8AewADAQECAwEBAgMBAQIDAAEBAwABAQMABAEBAgMBAQIDAQECAwEBAgMBAQIDAAEBDwABAQ8A
        BAEBAgMBAQIDAQECAwABAQMAAQEDAAQBAQIDAQECAwEBAgMBAQIDAQECAwABAQ8AAQEPAAQBAQIDAQEC
        AwEBAgMAAQEDAAEBAwAEAQECAwABAQMAAQEHAAEBRAADFwEfAzYBXAMyAZkDMgGZAzIBmQMwAVwYAAMB
        AQIDAQECAwABAQsAAQEDAAEBAwABAQMABAEBAgMAAQEkAAMBAQIDAQECAwABAQsAAQEDAAEBAwABAQMA
        BAEBAgMAAQEkAAMBAQIDAQECAwABAQsAAQEDQgF6A0gBjQM0AVADAAEBAwABAQM/AWwDRwGRAzgBWzQA
        AxcBHwM5AWcDOAG4AywBzAMyAaMDHAHWAzIBmRsAAQEDAAEBDwABAQMAAQEDAAEBAwABAQMAAQEDAAEB
        JwABAQMAAQEPAAEBAwABAQMAAQEDAAEBAwABAQMAAQEnAAEBAwIBAwMCAQMDBgEIAxgBIQM9AWcDRAHe
        AkYBRwHrA0wBsAM8AWYDPQFnA0kB0gM/AfYDSQG+AzIBTgMEAQYDAQECAwMBBAMCAQMgAAM2AVwDOAG4
        AykBzAM+AWYDEAEVAzIBmAMyAZkkAAMMARADHwEqAyMBMAMjATEDIwExAyMBMQMjATEDIwExAyMBMQMj
        ATEDIwExAyIBLwMdAScDBgEIMwABASwAAwQBBgMFAQcDGQEiAz4BbgM+Af0DRQHYA0kBwwNKAcEDRgHM
        A0cBzgNGAc0DRgHOA0UB2gNKAcoDKgE/Aw0BEQMHAQkDBQEHIAADMgGYAywBzAM+AWcIAAMyAZgDMgGZ
        JAADNgFQA1cB0ANQAe0DTAHvA00B7wNMAfADSQHyA0kB8gNJAfIDSQHyA0oB8gNPAekDVwHCAx0BJysA
        BAEEAgEDAwABASgAAwMEBAEGAzkBWwNJAeEDQgH1AzEBTQMPARQDCQEMAwoBDgMMARADCgEOAxABFgM9
        AWgDSQHjAjwBOwH/Ay0BRQMIAQsDAQECDAADKwE+Az0BjwMhAcwDIQHMAyEBzAMPAeoDMgGjAxABFQgA
        AzIBmAMuAcIDNQFSIAADNwFTA1kB1QNUAegDUwHjA1YB4ANWAd8DVQHhA1QB5ANRAeoDTwHsA08B7QNP
        AeIDUQGpAxkBIhgAAwMBBAMGAQgDAQECAwEEAgQDBAQEBQEHAwQBBQMEAQYDBAEGAwQBBQMKAQ0DAQEC
        EAADCgENAkIBQwF5AksBTAHMA00BxQM4AV0DMQFLA0gBjgNKAcQDRwHOA0cBzANNAa8DOAFaAyMBMgM7
        AWQCRwFGAeUDSAHUAzgBXwMIAQsIAAMqAT0DPAGZAzIBwgM6AaQDMgFmAzIBZgMyAWYDJgE9DAADMgGY
        AyAB6wNIAbMDMgFNAwwBEBgAAxkBIQM4AVUDOwFcAzoBWQM5AVgDOQFXAzkBWAM6AVkDOwFcAzsBXQM7
        AV4DOQFZAy0BQQMKAQ0UAAM4AVsDRgGaA0IBfQMAAQEDAAQBAQIDAQECAwEEAgEDAwEEAgEDAwIBAwMY
        ASADRgGdA0gBmQMqAT0MAANCAXkCRwFIAdECSQFKAb4DNwFZAxQBGwNIAZYDRwGTA0ABdAM8AWgDPAFm
        AzoBXgFGAkUBhQM/AXEDJQE2Az8BbgNDAeIDSgG1AzMBTwgAAz4BZgMsAcwDMAG3AysBPhwAAzIBmAMf
        AeoDSAHHA0oBswMaASRkAANHAZgDPQH9A0IB3gM8AWYDEAEVGAADHgEpA0UBhAM6AfwDPQH9AzwBZgwA
        AUkCSgHEAz4B+ANIAaEDHQEpAzgBWAFHAkgBlQM1AVUDDwEUAwMBBAMCAQMDBgEIAzsBZANHAZEDPgFs
        Ax8BLQNFAdUBRAFDAUQB7AFHAkYBhggAAz4BZgMsAcwDMgGZIAADMgGYAywBzANIAZkDNwH/AyQBNBgA
        AwoBDQMbASUDIwExAyQBMgMkATMDIwEyAyQBMgMkATIDIwExAyQBMgMkATIDIgEwAxwBJgMGAQgUAANC
        AXkDRgHeAz8B/QM9Af4DOQFdAxEBFwMBAQIIAAMBAQIDGAEgA0UBhAM+Af0DPQH8A0UB0wMzAVAMAAFI
        AkkBowNHAdwDSAGXAy0BRQNMAdcDLgFHAwsBDwMRARcDJQE2AyQBNAMIAQsDEAEWA0ABdQNJAcwDKAE7
        AkUBRwHVAkMBRAHeA0IBeQgAAz4BZgMsAcwDMgGZIAADMgGYAywBzANIAZkDNwH/AyQBNBgAAy0BQgNR
        AbQDSQHyA0gB9gNEAfkDRAH4A0gB9gNIAfYDSgHzA0kB9ANFAfgDSAHtA1YBuwMcASYYAAM8AWIDRgH3
        A0AB/QM9Af4DPgFvAwcBCQgAAwcBCQNJAZwDQAH9A0AB+wNCAfUDIwEyEAADAwEEA0MBdANEAXkDKgE/
        ATsCPAH7AyYBOAMIAQsDPgFuAjsBPAH+AzoB+wMkATQDCAELAz4BbQNGAdIDJwE5A0cBzgM7AWUDAQEC
        CAADPgFmAywBzAMyAZkgAAMyAZgDLAHMA0gBmQM3Af8DJAE0GAADLwFFA1MBugNJAfIDTAHwA00B7wNP
        Ae4DUQHsA0oB8gNLAfADSwHyA0YB9gNGAewDVwG9AxwBJhgAAw8BFAM4AVoDRgH3Az4B/ANFAd8DQwF9
        AwYBCAMEAQYDSAGhA0MB6QNAAfsDTAHQAyMBMgMIAQoQAAMLAQ8DSAGKA0gBigMpAT0CQwFEAfEDJwE5
        AwUBBwM8AWcCOgE7AfwDOwH+AyYBNwMHAQkDPgFsA0UB1AMeASsDSwG+AzsBZAMGAQgIAAM+AWYDLAHM
        AzIBmSAAAzIBmAMsAcwDSAGZAzcB/wMkATQYAAMVARwDMgFLAzwBYAM7AV8DOwFeAzsBXgM7AV0DPAFg
        AzsBXwM8AWADPAFiAzoBXgMzAUsDDAEPHAADDwEUAzwBYgNGAd4DPgH9A0cB1gNIAZwDRgGbA0MB6AM8
        Af0DSQG/AzMBThgAA0QBgQJHAUgB0QNIAZYDKAE8Aj8BQAH3Ay0BRgMIAQsDHwErAz0BawM+AW0DEgEY
        Aw4BEwM/AXEDSgHGAxcBIAJNAU4BsQFMAksBsAM4AVsIAAM+AWYDLAHMAzABrgMeASkcAAMyAZgDJAHh
        A0kBuANHAcwDHgEqdAADQgF5A0YB0wM+AfwDPwH9AzsB/AM8AfwDRwG/AzcBWxwAAUoCTAG1AUABPwFA
        AfMDRwGgAyIBMQNHAaMDQgF6AyUBNgMJAQwDBwEKAwYBCAMCAQMDLgFFA0YBhwNHAYoDEwEaA0sBugNG
        AegDSAGNCAADNAFRAzYBsgMvAccDPwGGAyIBNAMiATQDIgE0AxwBKQMQARUIAAMyAZgDGQH1A0YBzAM+
        AWYDEAEVGAADDAEPAx0BJwMjATIDIwExAyMBMQMjATEDIwExAyMBMAMiAS8DIQEuAyEBLQMfASoDGAEg
        AwUBBx8AAQEIAANCAXgDRgHdA0AB+wNAAfsDRwHVAzQBUiAAA0UBeQFKAUkBSgHTA0gBswMqAT8DFAEb
        A0gBmQNBAXQDKwFBAygBOwMlATUDIQEvA0YBgQNHAYgDKwE/Ay4BRwNFAdcDSAHZA0IBdQwAAzIBTQM6
        AbMDAAH/AwAB/wMAAf8DAAH/AywBzAM+AWcIAAMyAZgDLAHMAz4BZyAAAzEBSANSAcIDQgH1A0oB8wNM
        AfMDTAHyA0wB7wNRAeoDVAHoA1YB4wNWAd8DVgHPA08BnAMYASAYAAMBAQIDAwEEAwEBAgMAAQEDBgEI
        Az0BaQNCAfUDQgH1Ay0BRgMJAQwDAQECAwABAQMAAQEUAAMHAQoDSAGOA0kB5ANOAbcDCwEPAw0BEQNF
        AX8DSAHeAzsB/wM7Af8DSwHZAz0BaQMWAR4DKwRAAfMBRAJDAe4DRQGFAxwBJgwAAwsBDwMaASQDIQEz
        AyEBMwMhATMDOwFwAzgBuAMoAc0DPgFnAxABFQMyAZgDMgGjAxABFSAAAzQBTQNVAcsDSQHyA0wB8QNM
        AfEDTwHuA1EB6gNNAe4DVQHkA1YB5QNVAeYDVQHcA1UBswMbASUYAAMBAQIDAwEEAwEBAgMAAQEDAgED
        AxIBGAMmATcDJQE2Aw4BEgMEAQUDAAEBAwABAQMCAQMDAAEBEAADAwEEAxoBJANFAYMDRQHqAUUCRwHP
        AyQBNAMXAR8DIwExAygBPAMrAUEDIwExAyIBMAM+AW0DSAHLA0cB6gM7AWQDGwElAwgBCiAAAxcBHwM5
        AWYDOAG4AywBzAM7AWcDMAG3AzIBmSQAAxcBHwM2AVIDPAFgAzwBYAM8AWADOwFeAzsBXQM7AV8DOwFa
        AzsBWwM7AVwDOQFZAzIBSgMMAQ8bAAQBAQIDAAEBBwAEAQQCAQMDAgEDAwEBAgMAAQELAAEBFAADAwQE
        AQYDJAE0A0cBlAE8Aj0B/ANJAbEDRwGcA0cBnAJHAUgBnANIAZkDSAGYA0gBpgNGAc0DRQHhA0UBgAMb
        ASUDBwEJAwIBAyQAAxYBHgM6AWYDLAHMAzgBuAMdAeEDMgGZvAADBAEGAwQBBQMIAQsDIgExA0cBmANG
        AeIBPwJAAfcDRgHWA0gBngNHAZEDSAHeA0EB9ANGAdgDRQGQAxsBJgMIAQsDAwEEAwEBAigAAxABFQM+
        AWYDLgG2AyIBywM0AXq8AAMEAQYDBAEGAwEBAgMAAQEDBAEGA0kBlQNMAbwDQwF5AwsBDgMBAQIDSgGT
        A0wBuANEAX0DFQEdAwQBBQMAAQEDAAEBAwABAYcAAQEDAAEBSwABAQMAAQFoAAFCAU0BPgcAAT4DAAEo
        AwABUAMAASgDAAEBAQABAQUAAeABARYAA//xAAL/AfABAAHuAQABDgHgAQUB/wIAAf8BAwHxAYEB/wEY
        AR8B8QGAAT8CAAH+AQMB8wGBAf8BOAEfAfABAAEBAgAB/gEDAf4BAAEHAf8BvwH4AQABAQIAAf4BMwH+
        AQABBwH+AR8B+AEAAQECAAHAATEB/gEAAQcB4AEAAXgBAAEBAgABgAFwAX4BAAEHAcABAAE4AQABAQIA
        AYcB8AF/Av8BwQH4ATgBAAEBAgABjwHwAX4BAAEHAcABYAE4AQABAQIAAY8B8AF+AQABBwHgAWABeAEA
        AQECAAGPAfABfgEAAQcB4AEAAXgBAAEBAgABjwHwAX4BAAEHAfABAQH4AQABAQIAAYcB8AF/Av8B/AED
        AfgBAAEBAgABgAEwAX4BAAEHAfYBBwH4AQABAQIAAcABMQH+AQABBwHgAQAB+AEAAQECAAHAAQEB/gEA
        AQcB4AEAAXgBAAEBAgAB/gEDAf4BAAEHAeIBBgH4AQABAQIAAf8BAwX/AfgBAAEBAgAB/wGDBf8B+AEA
        AQECAAT/AT8B/wHzA/8CAAs=
</value>
  </data>
</root>