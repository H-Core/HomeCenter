syntax = "proto3";

package yandex.cloud.dataproc.v1;

import "google/protobuf/timestamp.proto";
import "yandex/cloud/dataproc/v1/common.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/dataproc/v1;dataproc";
option java_package = "yandex.cloud.api.dataproc.v1";

// Description of a Dataproc cluster. For more information, see
// the Yandex Dataproc [documentation](/docs/data-proc/concepts/).
message Cluster {
  enum Status {

    // Cluster state is unknown.
    STATUS_UNKNOWN = 0;

    // Cluster is being created.
    CREATING = 1;

    // Cluster is running normally.
    RUNNING = 2;

    // Cluster encountered a problem and cannot operate.
    ERROR = 3;

    // Cluster is stopping.
    STOPPING = 4;

    // Cluster stopped.
    STOPPED = 5;

    // Cluster is starting.
    STARTING = 6;
  }

  // ID of the Dataproc cluster.
  // This ID is assigned by Dataproc at creation time.
  string id = 1;

  // ID of the folder that the Dataproc cluster belongs to.
  string folder_id = 2;

  // Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  google.protobuf.Timestamp created_at = 3;

  // Name of the Dataproc cluster.
  // The name is unique within the folder. 1-64 characters long.
  string name = 4;

  // Description of the Dataproc cluster. 0-256 characters long.
  string description = 5;

  // Custom labels for the Dataproc cluster as `` key:value `` pairs.
  // Maximum 64 per resource.
  map<string, string> labels = 6;

  // Monitoring systems relevant to the Dataproc cluster.
  repeated Monitoring monitoring = 7;

  // Configuration of the Dataproc cluster.
  ClusterConfig config = 8;

  // Aggregated cluster health.
  Health health = 9;

  // Cluster status.
  Status status = 10;

  // ID of the availability zone.
  string zone_id = 11;

  // ID of service account for Dataproc manager agent.
  string service_account_id = 12;

  // Object storage bucket name for Dataproc jobs.
  string bucket = 13;
}

// Monitoring system.
message Monitoring {
  // Name of the monitoring system.
  string name = 1;

  // Description of the monitoring system.
  string description = 2;

  // Link to the monitoring system.
  string link = 3;
}

// Configuration, that describes application logic of installed services,
// their properties and settings.
message HadoopConfig {
  enum Service {
    SERVICE_UNSPECIFIED = 0;
    HDFS = 1;
    YARN = 2;
    MAPREDUCE = 3;
    HIVE = 4;
    TEZ = 5;
    ZOOKEEPER = 6;
    HBASE = 7;
    SQOOP = 8;
    FLUME = 9;
    SPARK = 10;
    ZEPPELIN = 11;
    OOZIE = 12;
  }

  // List of used services in cluster (for default use empty)
  repeated Service services = 1;

  // Properties passed to all hosts *-site.xml configurations.
  // In key you need to use prefix 'hdfs:dfs.replication' for setting
  // property 'dfs.replication' in /etc/hadoop/conf/hdfs-site.xml
  map<string, string> properties = 2;

  // List of ssh public keys to access to cluster hosts.
  repeated string ssh_public_keys = 3;
}

message ClusterConfig {
  // Version of image for cluster provisioning.
  // All available versions are listed in the [documentation](/docs/managed-hadoop/concepts/image-versions).
  string version_id = 1;

  // Dataproc specific options
  HadoopConfig hadoop = 2;
}
